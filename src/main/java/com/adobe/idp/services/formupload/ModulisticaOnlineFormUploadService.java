
package com.adobe.idp.services.formupload;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ModulisticaOnline_FormUploadService", targetNamespace = "http://adobe.com/idp/services", wsdlLocation = "https://ws-t.servizi.infotn.it/soap/services/ModulisticaOnline/FormUpload?wsdl")
public class ModulisticaOnlineFormUploadService
    extends Service
{

//    private final static URL MODULISTICAONLINEFORMUPLOADSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.adobe.idp.services.formupload.ModulisticaOnlineFormUploadService.class.getName());

//    static {
//        URL url = null;
//        try {
//            URL baseUrl;
//            baseUrl = com.adobe.idp.services.formupload.ModulisticaOnlineFormUploadService.class.getResource(".");
//            url = new URL(baseUrl, "http://172.20.1.141:8080/soap/services/ModulisticaOnline/FormUpload?wsdl");
//        } catch (MalformedURLException e) {
//            logger.warning("Failed to create URL for the wsdl Location: 'http://172.20.1.141:8080/soap/services/ModulisticaOnline/FormUpload?wsdl', retrying as a local file");
//            logger.warning(e.getMessage());
//        }
//        MODULISTICAONLINEFORMUPLOADSERVICE_WSDL_LOCATION = url;
//    }

    public ModulisticaOnlineFormUploadService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ModulisticaOnlineFormUploadService() throws MalformedURLException {
//        super(MODULISTICAONLINEFORMUPLOADSERVICE_WSDL_LOCATION, new QName("http://adobe.com/idp/services", "ModulisticaOnline_FormUploadService"));
//    	super(new URL("https://ws-t.servizi.infotn.it/soap/services/ModulisticaOnline/FormUpload?wsdl"), new QName("http://adobe.com/idp/services", "ModulisticaOnline_FormUploadService"));
    	super(Thread.currentThread().getContextClassLoader().getResource("/FormUpload.wsdl"), new QName("http://adobe.com/idp/services", "ModulisticaOnline_FormUploadService"));
    	
    }

    /**
     * 
     * @return
     *     returns ModulisticaOnlineFormUpload
     */
    @WebEndpoint(name = "FormUpload")
    public ModulisticaOnlineFormUpload getFormUpload() {
        return super.getPort(new QName("http://adobe.com/idp/services", "FormUpload"), ModulisticaOnlineFormUpload.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ModulisticaOnlineFormUpload
     */
    @WebEndpoint(name = "FormUpload")
    public ModulisticaOnlineFormUpload getFormUpload(WebServiceFeature... features) {
        return super.getPort(new QName("http://adobe.com/idp/services", "FormUpload"), ModulisticaOnlineFormUpload.class, features);
    }

}
